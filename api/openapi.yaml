openapi: 3.0.0
info:
  title: Sample API
  description: A sample API that uses a sample-site as an example to demonstrate features
    in the OpenAPI 3.0 specification
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: http://localhost:8003
paths:
  /users:
    get:
      description: |
        Returns all users
      operationId: findUsers
      parameters:
      - name: tags
        in: query
        description: tags to filter by
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: maximum number of results to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Default
components:
  schemas:
    Users:
      type: array
      example:
      - id: "1"
        name: テスト太郎
        userId: test01
        status: active
      - id: "2"
        name: サンプル次郎
        userId: test02
        status: active
      - id: "3"
        name: ユーザ０１
        userId: user01
        status: active
      - id: "4"
        name: ユーザ０２
        userId: user02
        status: inactive
      - id: "5"
        name: ユーザ０３
        userId: user03
        status: pending
      - id: "6"
        name: ユーザ０４
        userId: user04
        status: active
      - id: "7"
        name: ユーザ０５
        userId: user05
        status: inactive
      - id: "8"
        name: ユーザ０６
        userId: user06
        status: pending
      - id: "9"
        name: ユーザ０７
        userId: user07
        status: active
      - id: "10"
        name: ユーザ０８
        userId: user08
        status: pending
      - id: "11"
        name: ユーザ０９
        userId: user09
        status: active
      items:
        $ref: '#/components/schemas/Users_inner'
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    Users_inner:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        userId:
          type: string
        status:
          type: string
          description: user status
          enum:
          - pending
          - active
          - inactive
